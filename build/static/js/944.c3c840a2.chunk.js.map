{"version":3,"file":"static/js/944.c3c840a2.chunk.js","mappings":"sQAoCaA,GAAiBC,EAAAA,EAAAA,GAAwB,CAACC,KAAM,SAA/BD,EApB8B,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACxE,OACI,kBAAMC,SAAUF,EAAhB,WACI,0BACI,SAAC,IAAD,CAAOG,YAAa,QAASC,KAAM,QAASC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,SAE7E,0BACI,SAAC,IAAD,CAAOL,YAAa,WAAYM,KAAM,WAAYL,KAAM,WAAYC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,SAErG,4BACI,SAAC,IAAD,CAAOH,UAAWC,EAAAA,EAAOF,KAAM,aAAcK,KAAK,aADtD,kBAGCR,IAAO,gBAAKS,UAAWC,EAAAA,EAAAA,MAAhB,SAA+BV,KACvC,0BACI,8CAyChB,WAAeW,EAAAA,EAAAA,KALS,SAACC,GAAD,MAA8C,CAClEC,OAAOD,EAAME,KAAKD,UAImB,CAACE,WAAAA,EAAAA,IAA1C,EAlCc,SAACC,GAIX,OAAIA,EAAMH,QACC,SAAC,KAAD,CAAUI,GAAI,cAIrB,+BACI,4BACI,mCACA,SAACrB,EAAD,CAAgBK,SAXX,SAACiB,GACdF,EAAMD,WAAWG,EAASC,MAAOD,EAASE,SAAUF,EAASG,wB,uHCpC/DC,EAAc,SAAC,GAAgB,IAAZN,EAAW,oBAC3BO,EAAWP,EAAMQ,KAAKC,SAAWT,EAAMQ,KAAKxB,MACjD,OACI,iBAAKS,UAAWC,EAAAA,EAAAA,YAAqB,KAAOa,EAAWb,EAAAA,EAAAA,MAAc,IAArE,WACI,yBACKM,EAAMU,YAEX,yBACKH,IAAY,iBAAMd,UAAWC,EAAAA,EAAAA,MAAjB,SAAgCM,EAAMQ,KAAKxB,cAM3D2B,EAAU,SAAC,GAAgB,IAAZX,EAAW,oBACnC,OACG,SAACM,GAAD,kBAAgBN,GAAhB,cAAuB,uCAAcA,EAAMY,OAAWZ,QAGhDX,EAAQ,SAAC,GAAgB,IAAZW,EAAW,oBACjC,OACQ,SAACM,GAAD,kBAAiBN,GAAjB,cACI,oCAAWA,EAAMY,OAAWZ,S,sGCvBrC,IAAMT,EAAW,SAACsB,GACtB,IAAIA,EACJ,MAAQ,qBAEEC,EAAmB,SAACC,GAAD,OAAsB,SAACF,GACpD,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cAG7BE,EAAmB,SAACC,GAAD,OAAsB,SAACL,GACpD,GAAIA,GAASA,EAAMG,OAASE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCV1C,KAAgB,YAAc,iCAAiC,MAAQ","sources":["components/Login/Login.tsx","components/common/FormControls/FormControls.tsx","utils/validators/validators.ts","webpack://samurai-way/./src/components/common/FormControls/FormControl.module.css?c6f9"],"sourcesContent":["import React from 'react'\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {logInThunk} from \"../../redux/Auth-reducer\";\nimport {Input} from \"../common/FormControls/FormControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Redirect} from \"react-router-dom\";\nimport styles from \"../common/FormControls/FormControl.module.css\"\n\n\ntype FormDataType = {\n    login: string\n    password: string\n    rememberMe: boolean\n}\nconst LoginForm:React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\n    return(\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field placeholder={\"Login\"} name={\"login\"} component={Input} validate={[required]}/>\n            </div>\n            <div>\n                <Field placeholder={\"Password\"} type={\"password\"} name={\"password\"} component={Input} validate={[required]}/>\n            </div>\n            <div>\n                <Field component={Input} name={\"rememberMe\"} type=\"checkbox\"/> Remember me\n            </div>\n            {error&&<div className={styles.error}>{error}</div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nexport const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\nconst Login = (props: LoginPropsType) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.logInThunk(formData.login, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <>\n            <div>\n                <h1>LOGIN</h1>\n                <LoginReduxForm onSubmit={onSubmit}/>\n            </div>\n        </>\n\n\n    )\n}\n\n\nexport type LoginPropsType = mapStateToPropsType & mapDispatchToPropsType\ntype mapDispatchToPropsType = {\n    logInThunk: (login: string, password: string, rememberMe: boolean) => void\n}\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStateType):mapStateToPropsType => ({\n    isAuth:state.auth.isAuth\n})\n\n// export default  connect (mapStateToProps, {loginThunk})(Login)\nexport default connect (mapStateToProps, {logInThunk})(Login)","import React from \"react\";\nimport styles from \"./FormControl.module.css\"\n\nconst FormControl = ({...props}) => {\n   const hasError = props.meta.touched && props.meta.error\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: '')} >\n            <div>\n                {props.children}\n            </div>\n            <div>\n                {hasError && <span className={styles.error}>{props.meta.error}</span>}\n            </div>\n\n        </div>\n    )\n}\nexport const Texarea = ({...props}) => {\n    return (\n       <FormControl{...props}><textarea {...props.input} {...props}/></FormControl>\n    )\n}\nexport const Input = ({...props}) => {\n    return (\n            <FormControl {...props}>\n                <input {...props.input} {...props}/>\n            </FormControl>\n\n    )\n}","import React from 'react'\n\nexport const required = (value:boolean) => {\n   if (value) return undefined;\n   return  'Field is required'\n}\nexport const maxLengthCreator = (maxLength:number) => (value:string) => {\n   if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n   return  undefined\n}\nexport const minLengthCreator = (minLength:number) => (value:string) => {\n   if (value && value.length < minLength) return `Min length is ${minLength} symbols`;\n   return  undefined\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControl_formControl__Bo16d\",\"error\":\"FormControl_error__7odTm\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","placeholder","name","component","Input","validate","required","type","className","styles","connect","state","isAuth","auth","logInThunk","props","to","formData","login","password","rememberMe","FormControl","hasError","meta","touched","children","Texarea","input","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength"],"sourceRoot":""}